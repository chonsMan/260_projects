Name: Jesse Harris

For this project my main goal is to build two lists. The two lists a comprised of a stack and a queue. The statck will hold information that pertains to whether or not a certain customer at a restaurant wants to be contacted with promo deals. This will need to have a default constructor, a constructor for a reserved size, a copy constructor, and a move constructor. The destructor will be set to default. The member functions also include a peek function that will allow the the user to see the next contact information in the list. If there is no list then the function throws a length error that there is no list. This will also need an operator overload for the "[]" operator. The queue, on the other hand, will house the groups of people waiting in the line to be seated. It will need the same constructors as stack. There will also need to be a function that checks if the queue is empty. Within the Queue I will need to implement a node struct that will take a Group into its constructor (each node contains group information). The Group will be written in a seperate file, whcih I will address below. Other member functions will include a peek function, which will look at the next group in the list and a pop function, which will be used to seeat a group. Both of these will send a length error message if the list is empty. Next is the Group functionality. The group is constructed of a name, number of guests, special seating requirements, and an option of whether or not they would like to be part of a promo deal. It will have private member variable of type Steve, wich will now be addressed.

Steve is a string class that I will build because we cannot use the default string class and I think that implementing one will be productive and worth my time and it will also be more efficient forthe program. Steve will be a vector string, because that is what we are asked to use in this assignment. It will a reserve function to reserve the size of a string. It will also need a funtion to check if it is empty. There will need to be many operator overloads for the "=" operator. 

AS noted, there will need to be a vector .cpp file that I will create. Thie is what will handle all of the functionality circulating around allocating size to fit the string data that will be passed into the program. It will shrink by half if at 1/4 capacity and it will double in size if it reaches its capacity. 

I will also include functionality to deal with the contact information. Considering that it is just an email and a name it will not be that large and willl be mainly comprised of move semantics to move that information to the stack functionality I mentioned above. 

All that will be left is the interface functionality. This will handle the user input and use seperate functionto shield the client from the program. This includes functionality to both add a group and seat a group and add a guest to the promo list. 
